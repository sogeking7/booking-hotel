plugins {
    id("io.quarkus") version "3.21.1"
    id 'org.openapi.generator' version "${openApiGeneratorVersion}"
}

dependencies {
    implementation 'io.quarkus:quarkus-flyway'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    testImplementation 'io.quarkus:quarkus-junit5'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'io.quarkiverse.jooq:quarkus-jooq:2.0.1'
    implementation 'io.quarkus:quarkus-swagger-ui'

    implementation project(':dao')
}

openApiGenerate {
    generatorName = "typescript-angular"
    inputSpec = "$rootDir/core/config/openapi.yml".toString()
    outputDir = "$rootDir/build/angular".toString()
    apiPackage = "api"
    invokerPackage = "invoker"
    modelPackage = "model"
    skipValidateSpec.set(true)
    configOptions = [
            "dateLibrary"       : "java8",
            "fileNaming"        : "kebab-case",
            "enumPropertyNaming": "original"
    ]
}

task loadOpenapi {
    doLast {
        def url = project.properties['openapi-url'] ?: "http://localhost:8080"
        def file = new File("$rootDir/core/config/openapi.yml")
        println 'downloading openapi from ' + url
        new URL("$url/q/openapi").withInputStream { i -> file.withOutputStream { it << i } }
    }
}

task tsgen {
    dependsOn ':main-app:loadOpenapi'
    dependsOn ':main-app:openApiGenerate'
    doLast {
        println 'Generating TypeScript API client...'
        delete "$rootDir/ui/src/lib/todo-api"
        delete "$rootDir/build/angular/.openapi-generator-ignore"
        delete "$rootDir/build/angular/.openapi-generator"
        copy {
            from "$rootDir/build/angular"
            into "$rootDir/ui/src/lib/todo-api"
        }
    }
}