/*
 * This file is generated by jOOQ.
 */
package org.booking_hotel.jooq.model.tables.records;


import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.booking_hotel.jooq.model.tables.Orders;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders.id_</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders.id_</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.orders.created_at_</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders.created_at_</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.orders.updated_at_</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orders.updated_at_</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.orders.removed_</code>.
     */
    public void setRemoved(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orders.removed_</code>.
     */
    public Boolean getRemoved() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.orders.from_date_</code>.
     */
    public void setFromDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orders.from_date_</code>.
     */
    public LocalDate getFromDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.orders.to_data_</code>.
     */
    public void setToData(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.orders.to_data_</code>.
     */
    public LocalDate getToData() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>public.orders.hotel_id_</code>.
     */
    public void setHotelId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.orders.hotel_id_</code>.
     */
    public Long getHotelId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.orders.user_id_</code>.
     */
    public void setUserId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.orders.user_id_</code>.
     */
    public Long getUserId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.orders.room_type_id_</code>.
     */
    public void setRoomTypeId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.orders.room_type_id_</code>.
     */
    public Long getRoomTypeId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Long id_, OffsetDateTime createdAt_, OffsetDateTime updatedAt_, Boolean removed_, LocalDate fromDate_, LocalDate toData_, Long hotelId_, Long userId_, Long roomTypeId_) {
        super(Orders.ORDERS);

        setId(id_);
        setCreatedAt(createdAt_);
        setUpdatedAt(updatedAt_);
        setRemoved(removed_);
        setFromDate(fromDate_);
        setToData(toData_);
        setHotelId(hotelId_);
        setUserId(userId_);
        setRoomTypeId(roomTypeId_);
        resetTouchedOnNotNull();
    }
}
