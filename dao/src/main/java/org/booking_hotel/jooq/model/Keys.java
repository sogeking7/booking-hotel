/*
 * This file is generated by jOOQ.
 */
package org.booking_hotel.jooq.model;


import org.booking_hotel.jooq.model.tables.BedTypes;
import org.booking_hotel.jooq.model.tables.Cities;
import org.booking_hotel.jooq.model.tables.Countries;
import org.booking_hotel.jooq.model.tables.Facilities;
import org.booking_hotel.jooq.model.tables.Files;
import org.booking_hotel.jooq.model.tables.FlywaySchemaHistory;
import org.booking_hotel.jooq.model.tables.Hotels;
import org.booking_hotel.jooq.model.tables.Media;
import org.booking_hotel.jooq.model.tables.Orders;
import org.booking_hotel.jooq.model.tables.RoomTypeFacilities;
import org.booking_hotel.jooq.model.tables.RoomTypes;
import org.booking_hotel.jooq.model.tables.Sessions;
import org.booking_hotel.jooq.model.tables.Users;
import org.booking_hotel.jooq.model.tables.records.BedTypeRecord;
import org.booking_hotel.jooq.model.tables.records.CityRecord;
import org.booking_hotel.jooq.model.tables.records.CountryRecord;
import org.booking_hotel.jooq.model.tables.records.FacilityRecord;
import org.booking_hotel.jooq.model.tables.records.FileRecord;
import org.booking_hotel.jooq.model.tables.records.FlywaySchemaHistoryRecord;
import org.booking_hotel.jooq.model.tables.records.HotelRecord;
import org.booking_hotel.jooq.model.tables.records.MediaRecord;
import org.booking_hotel.jooq.model.tables.records.OrderRecord;
import org.booking_hotel.jooq.model.tables.records.RoomTypeFacilityRecord;
import org.booking_hotel.jooq.model.tables.records.RoomTypeRecord;
import org.booking_hotel.jooq.model.tables.records.SessionRecord;
import org.booking_hotel.jooq.model.tables.records.UserRecord;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BedTypeRecord> BED_TYPES_PKEY = Internal.createUniqueKey(BedTypes.BED_TYPES, DSL.name("bed_types_pkey"), new TableField[] { BedTypes.BED_TYPES.ID }, true);
    public static final UniqueKey<CityRecord> CITIES_PKEY = Internal.createUniqueKey(Cities.CITIES, DSL.name("cities_pkey"), new TableField[] { Cities.CITIES.ID }, true);
    public static final UniqueKey<CountryRecord> COUNTRIES_PKEY = Internal.createUniqueKey(Countries.COUNTRIES, DSL.name("countries_pkey"), new TableField[] { Countries.COUNTRIES.ID }, true);
    public static final UniqueKey<FacilityRecord> FACILITIES_PKEY = Internal.createUniqueKey(Facilities.FACILITIES, DSL.name("facilities_pkey"), new TableField[] { Facilities.FACILITIES.ID }, true);
    public static final UniqueKey<FileRecord> FILES_PKEY = Internal.createUniqueKey(Files.FILES, DSL.name("files_pkey"), new TableField[] { Files.FILES.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<HotelRecord> HOTELS_PKEY = Internal.createUniqueKey(Hotels.HOTELS, DSL.name("hotels_pkey"), new TableField[] { Hotels.HOTELS.ID }, true);
    public static final UniqueKey<MediaRecord> MEDIA_PKEY = Internal.createUniqueKey(Media.MEDIA, DSL.name("media_pkey"), new TableField[] { Media.MEDIA.ID }, true);
    public static final UniqueKey<OrderRecord> ORDERS_PKEY = Internal.createUniqueKey(Orders.ORDERS, DSL.name("orders_pkey"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<RoomTypeFacilityRecord> ROOM_TYPE_FACILITIES_PKEY = Internal.createUniqueKey(RoomTypeFacilities.ROOM_TYPE_FACILITIES, DSL.name("room_type_facilities_pkey"), new TableField[] { RoomTypeFacilities.ROOM_TYPE_FACILITIES.ID }, true);
    public static final UniqueKey<RoomTypeRecord> ROOM_TYPES_PKEY = Internal.createUniqueKey(RoomTypes.ROOM_TYPES, DSL.name("room_types_pkey"), new TableField[] { RoomTypes.ROOM_TYPES.ID }, true);
    public static final UniqueKey<SessionRecord> SESSIONS_PKEY = Internal.createUniqueKey(Sessions.SESSIONS, DSL.name("sessions_pkey"), new TableField[] { Sessions.SESSIONS.TOKEN }, true);
    public static final UniqueKey<UserRecord> USERS_EMAIL__KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email__key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UserRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
}
